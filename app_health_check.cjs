const fs = require('fs');
const path = require('path');

console.log('üîç –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\n');

// –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
const issues = [];
const fixes = [];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
function checkProjectStructure() {
  console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...');
  
  const requiredDirs = [
    'src',
    'src/components',
    'src/hooks',
    'src/utils',
    'src/types',
    'src/locales',
    'src/integrations',
    'src/pages',
    'public',
    'supabase'
  ];
  
  const requiredFiles = [
    'package.json',
    'vite.config.ts',
    'tsconfig.json',
    'tailwind.config.ts',
    'src/main.tsx',
    'src/App.tsx',
    'src/integrations/supabase/client.ts',
    'index.html'
  ];
  
  for (const dir of requiredDirs) {
    if (!fs.existsSync(dir)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
      fixes.push(`mkdir -p ${dir}`);
    }
  }
  
  for (const file of requiredFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`);
    }
  }
  
  console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function checkDependencies() {
  console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
  
  try {
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const requiredDeps = [
      'react',
      'react-dom',
      '@supabase/supabase-js',
      '@tanstack/react-query',
      'lucide-react',
      'clsx',
      'tailwind-merge'
    ];
    
    const missingDeps = requiredDeps.filter(dep => 
      !packageJson.dependencies?.[dep] && !packageJson.devDependencies?.[dep]
    );
    
    if (missingDeps.length > 0) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missingDeps.join(', ')}`);
      fixes.push(`npm install ${missingDeps.join(' ')}`);
    }
    
    console.log('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
  } catch (error) {
    issues.push('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json');
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ TypeScript
function checkTypeScriptConfig() {
  console.log('‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ TypeScript...');
  
  try {
    const tsconfig = JSON.parse(fs.readFileSync('tsconfig.json', 'utf8'));
    
    if (!tsconfig.compilerOptions?.baseUrl) {
      issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç baseUrl –≤ tsconfig.json');
      fixes.push('–î–æ–±–∞–≤–∏—Ç—å "baseUrl": "." –≤ compilerOptions');
    }
    
    if (!tsconfig.compilerOptions?.paths) {
      issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç paths –≤ tsconfig.json');
      fixes.push('–î–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ paths –¥–ª—è –∞–ª–∏–∞—Å–æ–≤');
    }
    
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è TypeScript –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞\n');
  } catch (error) {
    issues.push('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è tsconfig.json');
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Vite
function checkViteConfig() {
  console.log('‚ö° –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Vite...');
  
  try {
    const viteConfig = fs.readFileSync('vite.config.ts', 'utf8');
    
    if (!viteConfig.includes('@/')) {
      issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞–ª–∏–∞—Å—ã –≤ vite.config.ts');
      fixes.push('–î–æ–±–∞–≤–∏—Ç—å resolve.alias –¥–ª—è @/');
    }
    
    if (!viteConfig.includes('react')) {
      issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–ª–∞–≥–∏–Ω React –≤ vite.config.ts');
      fixes.push('–î–æ–±–∞–≤–∏—Ç—å @vitejs/plugin-react');
    }
    
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vite –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞\n');
  } catch (error) {
    issues.push('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è vite.config.ts');
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
function checkComponents() {
  console.log('üß© –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
  
  const componentFiles = [
    'src/components/MainApp.tsx',
    'src/components/Header.tsx',
    'src/components/BottomNavigation.tsx',
    'src/components/Sidebar.tsx',
    'src/components/screens/MainScreen.tsx',
    'src/components/screens/SkinsScreen.tsx',
    'src/components/screens/TasksScreen.tsx',
    'src/components/inventory/InventoryScreen.tsx',
    'src/components/settings/SettingsScreen.tsx',
    'src/components/quiz/QuizScreen.tsx',
    'src/components/auth/AuthScreen.tsx',
    'src/components/AdminPanel.tsx'
  ];
  
  for (const file of componentFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${file}`);
    }
  }
  
  console.log('‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—É–∫–æ–≤
function checkHooks() {
  console.log('üé£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—É–∫–æ–≤...');
  
  const hookFiles = [
    'src/hooks/useSecureAuth.ts',
    'src/hooks/useSecureShop.ts',
    'src/hooks/useSecureInventory.ts',
    'src/hooks/useCS2CaseOpening.ts',
    'src/hooks/useQuiz.ts',
    'src/hooks/useEnhancedSecurity.ts',
    'src/hooks/useSecureTaskProgress.ts',
    'src/hooks/useSecureValidation.ts',
    'src/hooks/useSecureAction.ts',
    'src/hooks/useSecureRateLimit.ts',
    'src/hooks/useFreeCaseTimers.ts',
    'src/hooks/useWithdrawSkin.ts'
  ];
  
  for (const file of hookFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ö—É–∫: ${file}`);
    }
  }
  
  console.log('‚úÖ –•—É–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç
function checkUtils() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç...');
  
  const utilFiles = [
    'src/utils/security.ts',
    'src/utils/securityEnhanced.ts',
    'src/utils/securityValidation.ts',
    'src/utils/bannerUpload.ts',
    'src/utils/clearCache.ts',
    'src/utils/rarityColors.ts',
    'src/utils/rateLimiter.ts',
    'src/utils/sessionUtils.ts',
    'src/utils/uuid.ts',
    'src/utils/supabaseTypes.ts'
  ];
  
  for (const file of utilFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —É—Ç–∏–ª–∏—Ç–∞: ${file}`);
    }
  }
  
  console.log('‚úÖ –£—Ç–∏–ª–∏—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
function checkTypes() {
  console.log('üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤...');
  
  const typeFiles = [
    'src/types/admin.ts',
    'src/types/rpc.ts',
    'src/types/safeCaseOpening.ts',
    'src/types/taskProgress.ts'
  ];
  
  for (const file of typeFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª —Ç–∏–ø–æ–≤: ${file}`);
    }
  }
  
  console.log('‚úÖ –¢–∏–ø—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
function checkLocalization() {
  console.log('üåç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏...');
  
  const localeFiles = [
    'src/locales/index.ts',
    'src/locales/ru.ts',
    'src/locales/en.ts',
    'src/locales/pl.ts',
    'src/locales/pt.ts',
    'src/locales/fr.ts',
    'src/locales/de.ts',
    'src/locales/es.ts'
  ];
  
  for (const file of localeFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏: ${file}`);
    }
  }
  
  console.log('‚úÖ –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase
function checkSupabase() {
  console.log('üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase...');
  
  const supabaseFiles = [
    'supabase/config.toml',
    'supabase/functions/withdraw-skin/index.ts'
  ];
  
  for (const file of supabaseFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª Supabase: ${file}`);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
  const migrationsDir = 'supabase/migrations';
  if (fs.existsSync(migrationsDir)) {
    const migrations = fs.readdirSync(migrationsDir).filter(f => f.endsWith('.sql'));
    if (migrations.length === 0) {
      issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    }
  } else {
    issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π');
  }
  
  console.log('‚úÖ Supabase –ø—Ä–æ–≤–µ—Ä–µ–Ω\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
function checkUIComponents() {
  console.log('üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
  
  const uiComponents = [
    'src/components/ui/button.tsx',
    'src/components/ui/dialog.tsx',
    'src/components/ui/input.tsx',
    'src/components/ui/toast.tsx',
    'src/components/ui/toaster.tsx',
    'src/components/ui/alert.tsx',
    'src/components/ui/badge.tsx',
    'src/components/ui/card.tsx',
    'src/components/ui/progress.tsx',
    'src/components/ui/select.tsx',
    'src/components/ui/tabs.tsx',
    'src/components/ui/accordion.tsx',
    'src/components/ui/avatar.tsx',
    'src/components/ui/calendar.tsx',
    'src/components/ui/carousel.tsx',
    'src/components/ui/checkbox.tsx',
    'src/components/ui/collapsible.tsx',
    'src/components/ui/command.tsx',
    'src/components/ui/context-menu.tsx',
    'src/components/ui/drawer.tsx',
    'src/components/ui/dropdown-menu.tsx',
    'src/components/ui/form.tsx',
    'src/components/ui/hover-card.tsx',
    'src/components/ui/input-otp.tsx',
    'src/components/ui/label.tsx',
    'src/components/ui/menubar.tsx',
    'src/components/ui/navigation-menu.tsx',
    'src/components/ui/pagination.tsx',
    'src/components/ui/popover.tsx',
    'src/components/ui/radio-group.tsx',
    'src/components/ui/resizable.tsx',
    'src/components/ui/scroll-area.tsx',
    'src/components/ui/separator.tsx',
    'src/components/ui/sheet.tsx',
    'src/components/ui/sidebar.tsx',
    'src/components/ui/skeleton.tsx',
    'src/components/ui/slider.tsx',
    'src/components/ui/switch.tsx',
    'src/components/ui/table.tsx',
    'src/components/ui/textarea.tsx',
    'src/components/ui/toggle.tsx',
    'src/components/ui/toggle-group.tsx',
    'src/components/ui/tooltip.tsx',
    'src/components/ui/use-translation.ts'
  ];
  
  for (const file of uiComponents) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${file}`);
    }
  }
  
  console.log('‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
function checkAnimations() {
  console.log('üé¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π...');
  
  const animationFiles = [
    'src/components/animations/CaseOpeningPhase.tsx',
    'src/components/animations/CaseRevealingPhase.tsx',
    'src/components/animations/CaseCompletePhase.tsx'
  ];
  
  for (const file of animationFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª –∞–Ω–∏–º–∞—Ü–∏–∏: ${file}`);
    }
  }
  
  console.log('‚úÖ –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
function checkSecurity() {
  console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
  
  const securityFiles = [
    'src/components/security/SecurityMonitor.tsx',
    'src/components/security/SecurityAlert.tsx',
    'src/components/security/SecurityStatus.tsx',
    'src/components/security/AdminStatusIndicator.tsx'
  ];
  
  for (const file of securityFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${file}`);
    }
  }
  
  console.log('‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∫–∏
function checkAdmin() {
  console.log('üëë –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∫–∏...');
  
  const adminFiles = [
    'src/components/admin/AdminTable.tsx',
    'src/components/admin/AdminTableSelector.tsx',
    'src/components/admin/AddItemForm.tsx',
    'src/components/admin/UserManagement.tsx',
    'src/components/admin/CaseManagement.tsx',
    'src/components/admin/SkinRaritySelector.tsx',
    'src/components/admin/PromoCodeManagement.tsx',
    'src/components/admin/BannerManagement.tsx',
    'src/components/admin/UserBalanceModal.tsx',
    'src/components/admin/UserDuplicatesCleaner.tsx',
    'src/components/admin/SuspiciousActivityManagement.tsx',
    'src/components/admin/DatabaseImageCleanup.tsx',
    'src/components/admin/CaseJSONImporter.tsx',
    'src/components/admin/CaseSkinManagement.tsx'
  ];
  
  for (const file of adminFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–¥–º–∏–Ω–∫–∏: ${file}`);
    }
  }
  
  console.log('‚úÖ –ê–¥–º–∏–Ω–∫–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ–π—Å–æ–≤ –∏ —Å–∫–∏–Ω–æ–≤
function checkCasesAndSkins() {
  console.log('üéÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ–π—Å–æ–≤ –∏ —Å–∫–∏–Ω–æ–≤...');
  
  const caseSkinFiles = [
    'src/components/skins/CasesTab.tsx',
    'src/components/skins/ShopTab.tsx',
    'src/components/skins/ShopSkinCard.tsx',
    'src/components/skins/ShopFilters.tsx',
    'src/components/skins/ShopPagination.tsx',
    'src/components/skins/ShopEmptyState.tsx',
    'src/components/skins/CaseCard.tsx',
    'src/components/skins/CasePreviewModal.tsx',
    'src/components/skins/PurchaseSuccessModal.tsx',
    'src/components/CS2CaseOpening.tsx',
    'src/components/CS2CaseResult.tsx',
    'src/components/CS2CaseRoulette.tsx'
  ];
  
  for (const file of caseSkinFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–µ–π—Å–æ–≤/—Å–∫–∏–Ω–æ–≤: ${file}`);
    }
  }
  
  console.log('‚úÖ –ö–µ–π—Å—ã –∏ —Å–∫–∏–Ω—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function checkModals() {
  console.log('ü™ü –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...');
  
  const modalFiles = [
    'src/components/ads/AdModal.tsx',
    'src/components/inventory/WithdrawSkinModal.tsx',
    'src/components/settings/FAQModal.tsx',
    'src/components/settings/ImprovedSteamConnectionModal.tsx',
    'src/components/settings/LanguageSelector.tsx',
    'src/components/settings/PremiumModal.tsx',
    'src/components/settings/PrivacyPolicyModal.tsx',
    'src/components/settings/PromoCodeModal.tsx',
    'src/components/settings/SteamConnectionModal.tsx',
    'src/components/settings/TermsOfServiceModal.tsx',
    'src/components/quiz/QuizRestoreModal.tsx',
    'src/components/ReferralModal.tsx'
  ];
  
  for (const file of modalFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ: ${file}`);
    }
  }
  
  console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function checkImages() {
  console.log('üñºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
  
  const imageFiles = [
    'src/components/ui/InstantImage.tsx',
    'src/components/ui/LazyImage.tsx',
    'src/components/ui/OptimizedImage.tsx'
  ];
  
  for (const file of imageFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${file}`);
    }
  }
  
  console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
function checkOtherComponents() {
  console.log('üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
  
  const otherFiles = [
    'src/components/LoadingScreen.tsx',
    'src/components/WebViewOptimizer.tsx',
    'src/components/BannerCarousel.tsx',
    'src/components/DailyRewardsCalendar.tsx',
    'src/components/RecentWins.tsx',
    'src/components/referral/ReferralHandler.tsx',
    'src/pages/NotFound.tsx'
  ];
  
  for (const file of otherFiles) {
    if (!fs.existsSync(file)) {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${file}`);
    }
  }
  
  console.log('‚úÖ –î—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
function runHealthCheck() {
  checkProjectStructure();
  checkDependencies();
  checkTypeScriptConfig();
  checkViteConfig();
  checkComponents();
  checkHooks();
  checkUtils();
  checkTypes();
  checkLocalization();
  checkSupabase();
  checkUIComponents();
  checkAnimations();
  checkSecurity();
  checkAdmin();
  checkCasesAndSkins();
  checkModals();
  checkImages();
  checkOtherComponents();
  
  // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:');
  console.log('='.repeat(50));
  
  if (issues.length === 0) {
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ.');
  } else {
    console.log(`‚ùå –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: ${issues.length}`);
    console.log('\n–°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º:');
    issues.forEach((issue, index) => {
      console.log(`${index + 1}. ${issue}`);
    });
    
    if (fixes.length > 0) {
      console.log('\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
      fixes.forEach((fix, index) => {
        console.log(`${index + 1}. ${fix}`);
      });
    }
  }
  
  console.log('\n' + '='.repeat(50));
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
runHealthCheck(); 