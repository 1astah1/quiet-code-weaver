import { useState, useEffect } from "react";
import { X } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useCaseOpeningSafe } from "@/hooks/useCaseOpeningSafe";
import Case3DOpening from "@/components/animations/Case3DOpening";
import UnifiedCaseRoulette from "@/components/animations/UnifiedCaseRoulette";
import CaseCompletePhase from "@/components/animations/CaseCompletePhase";

interface CaseOpeningAnimationSafeProps {
  caseItem: any;
  onClose: () => void;
  currentUser: {
    id: string;
    username: string;
    coins: number;
  };
  onCoinsUpdate: (newCoins: number) => void;
}

const CaseOpeningAnimationSafe = ({
  caseItem,
  onClose,
  currentUser,
  onCoinsUpdate
}: CaseOpeningAnimationSafeProps) => {
  const [hasStarted, setHasStarted] = useState(false);
  
  const {
    wonSkin,
    wonCoins,
    isComplete,
    animationPhase,
    isProcessing,
    addToInventory,
    sellDirectly,
    error,
    isLoading,
    rouletteData,
    handleRouletteComplete,
    openCaseSafely
  } = useCaseOpeningSafe({ caseItem, currentUser, onCoinsUpdate });

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (!hasStarted && !isLoading && caseItem && currentUser) {
      console.log('üöÄ [CS2_CASE_OPENING] Starting CS2-style case opening');
      setHasStarted(true);
      openCaseSafely();
    }
  }, [hasStarted, isLoading, caseItem, currentUser, openCaseSafely]);

  const handleClose = () => {
    console.log('üîê [CS2_CASE_OPENING] Closing case animation');
    onClose();
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  if (error) {
    return (
      <div className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4">
        <div className="bg-slate-800 rounded-xl p-6 max-w-md w-full text-center">
          <div className="text-red-500 text-xl mb-4">‚ùå</div>
          <h3 className="text-white text-lg font-bold mb-2">–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞</h3>
          <p className="text-slate-300 mb-4">{error}</p>
          <Button onClick={handleClose} variant="outline">
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </div>
      </div>
    );
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞
  if (isLoading) {
    return (
      <div className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center">
        <div className="text-center">
          <div className="w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <div className="text-white text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–µ–π—Å–∞...</div>
        </div>
      </div>
    );
  }

  return (
    <div className="fixed inset-0 bg-black/90 backdrop-blur-sm z-50 flex flex-col">
      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ—Ç–∫—Ä—ã—Ç–∏—è */}
      {!isProcessing && animationPhase !== 'complete' && (
        <Button
          variant="ghost"
          size="icon"
          onClick={handleClose}
          className="absolute top-4 right-4 z-10 text-white hover:bg-white/20"
        >
          <X className="h-6 w-6" />
        </Button>
      )}

      <div className="flex-1 flex items-center justify-center p-4">
        {/* –≠—Ç–∞–ø 1: –ê–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ (CS2 —Å—Ç–∏–ª—å) */}
        {animationPhase === 'opening' && (
          <div className="w-full max-w-4xl">
            <Case3DOpening />
          </div>
        )}

        {/* –≠—Ç–∞–ø 2: –†—É–ª–µ—Ç–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ) */}
        {animationPhase === 'roulette' && rouletteData && (
          <div className="w-full max-w-6xl">
            <UnifiedCaseRoulette
              rouletteItems={rouletteData.items}
              winnerPosition={rouletteData.winnerPosition}
              onComplete={handleRouletteComplete}
            />
          </div>
        )}

        {/* –≠—Ç–∞–ø 3: –†–µ–∑—É–ª—å—Ç–∞—Ç —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ */}
        {animationPhase === 'complete' && (wonSkin || wonCoins > 0) && (
          <div className="w-full max-w-4xl">
            <CaseCompletePhase
              wonSkin={wonSkin}
              isProcessing={isProcessing}
              onAddToInventory={addToInventory}
              onSellDirectly={sellDirectly}
            />
          </div>
        )}

        {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è */}
        {!animationPhase && !error && (
          <div className="text-center">
            <div className="text-white text-xl mb-4">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –∫–µ–π—Å–∞...</div>
            <div className="w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto"></div>
          </div>
        )}
      </div>

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ */}
      {isProcessing && (
        <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2">
          <div className="flex items-center space-x-2 bg-slate-800/80 backdrop-blur-sm rounded-full px-4 py-2">
            <div className="w-4 h-4 border-2 border-orange-500 border-t-transparent rounded-full animate-spin"></div>
            <span className="text-white text-sm">–û–±—Ä–∞–±–æ—Ç–∫–∞...</span>
          </div>
        </div>
      )}
    </div>
  );
};

export default CaseOpeningAnimationSafe;
